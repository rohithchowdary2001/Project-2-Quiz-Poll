{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import api from '../../services/api';\n\n// const AuditLogs = () => {\n//     const [logs, setLogs] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState('');\n//     const [filters, setFilters] = useState({\n//         action: '',\n//         date_from: '',\n//         date_to: '',\n//         user_id: '',\n//         page: 1,\n//         limit: 50\n//     });\n\n//     useEffect(() => {\n//         fetchAuditLogs();\n//     }, [filters]);\n\n//     const fetchAuditLogs = async () => {\n//         try {\n//             console.log('AuditLogs - Fetching audit logs...');\n//             setLoading(true);\n//             const queryParams = new URLSearchParams();\n\n//             Object.entries(filters).forEach(([key, value]) => {\n//                 if (value) {\n//                     queryParams.append(key, value);\n//                 }\n//             });\n\n//             const response = await api.get(`/admin/audit-logs?${queryParams.toString()}`);\n//             console.log('AuditLogs - Logs fetched:', response.data);\n//             setLogs(response.data.logs || []);\n//             setError('');\n//         } catch (err) {\n//             console.error('AuditLogs - Error fetching logs:', err);\n//             setError(err.response?.data?.message || 'Failed to fetch audit logs');\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const handleFilterChange = (key, value) => {\n//         setFilters(prev => ({\n//             ...prev,\n//             [key]: value,\n//             page: 1 // Reset to first page when filtering\n//         }));\n//     };\n\n//     const clearFilters = () => {\n//         setFilters({\n//             action: '',\n//             date_from: '',\n//             date_to: '',\n//             user_id: '',\n//             page: 1,\n//             limit: 50\n//         });\n//     };\n\n//     const getActionBadgeClass = (action) => {\n//         switch (action?.toLowerCase()) {\n//             case 'login': return 'bg-success';\n//             case 'logout': return 'bg-info';\n//             case 'register': return 'bg-primary';\n//             case 'create': return 'bg-success';\n//             case 'update': return 'bg-warning';\n//             case 'delete': return 'bg-danger';\n//             case 'failed_login': return 'bg-danger';\n//             default: return 'bg-secondary';\n//         }\n//     };\n\n//     const formatDate = (dateString) => {\n//         return new Date(dateString).toLocaleString();\n//     };\n\n//     return (\n//         <div className=\"container mt-4\">\n//             <div className=\"d-flex justify-content-between align-items-center mb-4\">\n//                 <h2>Audit Logs</h2>\n//                 <button className=\"btn btn-primary\" onClick={fetchAuditLogs}>\n//                     <i className=\"fas fa-sync-alt me-2\"></i>\n//                     Refresh\n//                 </button>\n//             </div>\n\n//             {error && (\n//                 <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n//                     <i className=\"fas fa-exclamation-triangle me-2\"></i>\n//                     {error}\n//                     <button type=\"button\" className=\"btn-close\" onClick={() => setError('')}></button>\n//                 </div>\n//             )}\n\n//             {/* Filters */}\n//             <div className=\"card mb-4\">\n//                 <div className=\"card-header\">\n//                     <h5 className=\"mb-0\">Filters</h5>\n//                 </div>\n//                 <div className=\"card-body\">\n//                     <div className=\"row\">\n//                         <div className=\"col-md-3 mb-3\">\n//                             <label className=\"form-label\">Action</label>\n//                             <select \n//                                 className=\"form-select\" \n//                                 value={filters.action} \n//                                 onChange={(e) => handleFilterChange('action', e.target.value)}\n//                             >\n//                                 <option value=\"\">All Actions</option>\n//                                 <option value=\"LOGIN\">Login</option>\n//                                 <option value=\"LOGOUT\">Logout</option>\n//                                 <option value=\"REGISTER\">Register</option>\n//                                 <option value=\"CREATE\">Create</option>\n//                                 <option value=\"UPDATE\">Update</option>\n//                                 <option value=\"DELETE\">Delete</option>\n//                                 <option value=\"FAILED_LOGIN\">Failed Login</option>\n//                             </select>\n//                         </div>\n//                         <div className=\"col-md-3 mb-3\">\n//                             <label className=\"form-label\">From Date</label>\n//                             <input \n//                                 type=\"date\" \n//                                 className=\"form-control\" \n//                                 value={filters.date_from}\n//                                 onChange={(e) => handleFilterChange('date_from', e.target.value)}\n//                             />\n//                         </div>\n//                         <div className=\"col-md-3 mb-3\">\n//                             <label className=\"form-label\">To Date</label>\n//                             <input \n//                                 type=\"date\" \n//                                 className=\"form-control\" \n//                                 value={filters.date_to}\n//                                 onChange={(e) => handleFilterChange('date_to', e.target.value)}\n//                             />\n//                         </div>\n//                         <div className=\"col-md-3 mb-3\">\n//                             <label className=\"form-label\">User ID</label>\n//                             <input \n//                                 type=\"number\" \n//                                 className=\"form-control\" \n//                                 value={filters.user_id}\n//                                 onChange={(e) => handleFilterChange('user_id', e.target.value)}\n//                                 placeholder=\"Enter user ID\"\n//                             />\n//                         </div>\n//                     </div>\n//                     <div className=\"d-flex gap-2\">\n//                         <button className=\"btn btn-outline-secondary\" onClick={clearFilters}>\n//                             <i className=\"fas fa-times me-2\"></i>\n//                             Clear Filters\n//                         </button>\n//                         <button className=\"btn btn-primary\" onClick={fetchAuditLogs}>\n//                             <i className=\"fas fa-search me-2\"></i>\n//                             Apply Filters\n//                         </button>\n//                     </div>\n//                 </div>\n//             </div>\n\n//             {/* Logs Table */}\n//             <div className=\"card\">\n//                 <div className=\"card-header\">\n//                     <h5 className=\"mb-0\">Audit Logs ({logs.length})</h5>\n//                 </div>\n//                 <div className=\"card-body\">\n//                     {loading ? (\n//                         <div className=\"d-flex justify-content-center\">\n//                             <div className=\"spinner-border text-primary\" role=\"status\">\n//                                 <span className=\"visually-hidden\">Loading...</span>\n//                             </div>\n//                         </div>\n//                     ) : logs.length === 0 ? (\n//                         <div className=\"text-center py-4\">\n//                             <i className=\"fas fa-file-alt fa-3x text-muted mb-3\"></i>\n//                             <p className=\"text-muted\">No audit logs found.</p>\n//                         </div>\n//                     ) : (\n//                         <div className=\"table-responsive\">\n//                             <table className=\"table table-striped\">\n//                                 <thead>\n//                                     <tr>\n//                                         <th>Timestamp</th>\n//                                         <th>User</th>\n//                                         <th>Action</th>\n//                                         <th>Success</th>\n//                                         <th>IP Address</th>\n//                                         <th>Details</th>\n//                                     </tr>\n//                                 </thead>\n//                                 <tbody>\n//                                     {logs.map(log => (\n//                                         <tr key={log.id}>\n//                                             <td>{formatDate(log.timestamp)}</td>\n//                                             <td>\n//                                                 {log.user_id ? (\n//                                                     <span>\n//                                                         <i className=\"fas fa-user me-1\"></i>\n//                                                         {log.user_id}\n//                                                     </span>\n//                                                 ) : (\n//                                                     <span className=\"text-muted\">Anonymous</span>\n//                                                 )}\n//                                             </td>\n//                                             <td>\n//                                                 <span className={`badge ${getActionBadgeClass(log.action)}`}>\n//                                                     {log.action}\n//                                                 </span>\n//                                             </td>\n//                                             <td>\n//                                                 {log.success ? (\n//                                                     <span className=\"text-success\">\n//                                                         <i className=\"fas fa-check-circle\"></i>\n//                                                     </span>\n//                                                 ) : (\n//                                                     <span className=\"text-danger\">\n//                                                         <i className=\"fas fa-times-circle\"></i>\n//                                                     </span>\n//                                                 )}\n//                                             </td>\n//                                             <td>\n//                                                 <small className=\"text-muted\">{log.ip_address}</small>\n//                                             </td>\n//                                             <td>\n//                                                 {log.details ? (\n//                                                     <small className=\"text-muted\">\n//                                                         {typeof log.details === 'string' ? log.details : JSON.stringify(log.details)}\n//                                                     </small>\n//                                                 ) : (\n//                                                     <span className=\"text-muted\">-</span>\n//                                                 )}\n//                                             </td>\n//                                         </tr>\n//                                     ))}\n//                                 </tbody>\n//                             </table>\n//                         </div>\n//                     )}\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default AuditLogs;","map":{"version":3,"names":[],"sources":["C:/Users/rohit/OneDrive/Desktop/MS OCU/MS Project 2/Quiz-Poll/frontend/src/components/admin/AuditLogs.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import api from '../../services/api';\r\n\r\n// const AuditLogs = () => {\r\n//     const [logs, setLogs] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [error, setError] = useState('');\r\n//     const [filters, setFilters] = useState({\r\n//         action: '',\r\n//         date_from: '',\r\n//         date_to: '',\r\n//         user_id: '',\r\n//         page: 1,\r\n//         limit: 50\r\n//     });\r\n\r\n//     useEffect(() => {\r\n//         fetchAuditLogs();\r\n//     }, [filters]);\r\n\r\n//     const fetchAuditLogs = async () => {\r\n//         try {\r\n//             console.log('AuditLogs - Fetching audit logs...');\r\n//             setLoading(true);\r\n//             const queryParams = new URLSearchParams();\r\n            \r\n//             Object.entries(filters).forEach(([key, value]) => {\r\n//                 if (value) {\r\n//                     queryParams.append(key, value);\r\n//                 }\r\n//             });\r\n            \r\n//             const response = await api.get(`/admin/audit-logs?${queryParams.toString()}`);\r\n//             console.log('AuditLogs - Logs fetched:', response.data);\r\n//             setLogs(response.data.logs || []);\r\n//             setError('');\r\n//         } catch (err) {\r\n//             console.error('AuditLogs - Error fetching logs:', err);\r\n//             setError(err.response?.data?.message || 'Failed to fetch audit logs');\r\n//         } finally {\r\n//             setLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     const handleFilterChange = (key, value) => {\r\n//         setFilters(prev => ({\r\n//             ...prev,\r\n//             [key]: value,\r\n//             page: 1 // Reset to first page when filtering\r\n//         }));\r\n//     };\r\n\r\n//     const clearFilters = () => {\r\n//         setFilters({\r\n//             action: '',\r\n//             date_from: '',\r\n//             date_to: '',\r\n//             user_id: '',\r\n//             page: 1,\r\n//             limit: 50\r\n//         });\r\n//     };\r\n\r\n//     const getActionBadgeClass = (action) => {\r\n//         switch (action?.toLowerCase()) {\r\n//             case 'login': return 'bg-success';\r\n//             case 'logout': return 'bg-info';\r\n//             case 'register': return 'bg-primary';\r\n//             case 'create': return 'bg-success';\r\n//             case 'update': return 'bg-warning';\r\n//             case 'delete': return 'bg-danger';\r\n//             case 'failed_login': return 'bg-danger';\r\n//             default: return 'bg-secondary';\r\n//         }\r\n//     };\r\n\r\n//     const formatDate = (dateString) => {\r\n//         return new Date(dateString).toLocaleString();\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"container mt-4\">\r\n//             <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n//                 <h2>Audit Logs</h2>\r\n//                 <button className=\"btn btn-primary\" onClick={fetchAuditLogs}>\r\n//                     <i className=\"fas fa-sync-alt me-2\"></i>\r\n//                     Refresh\r\n//                 </button>\r\n//             </div>\r\n\r\n//             {error && (\r\n//                 <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n//                     <i className=\"fas fa-exclamation-triangle me-2\"></i>\r\n//                     {error}\r\n//                     <button type=\"button\" className=\"btn-close\" onClick={() => setError('')}></button>\r\n//                 </div>\r\n//             )}\r\n\r\n//             {/* Filters */}\r\n//             <div className=\"card mb-4\">\r\n//                 <div className=\"card-header\">\r\n//                     <h5 className=\"mb-0\">Filters</h5>\r\n//                 </div>\r\n//                 <div className=\"card-body\">\r\n//                     <div className=\"row\">\r\n//                         <div className=\"col-md-3 mb-3\">\r\n//                             <label className=\"form-label\">Action</label>\r\n//                             <select \r\n//                                 className=\"form-select\" \r\n//                                 value={filters.action} \r\n//                                 onChange={(e) => handleFilterChange('action', e.target.value)}\r\n//                             >\r\n//                                 <option value=\"\">All Actions</option>\r\n//                                 <option value=\"LOGIN\">Login</option>\r\n//                                 <option value=\"LOGOUT\">Logout</option>\r\n//                                 <option value=\"REGISTER\">Register</option>\r\n//                                 <option value=\"CREATE\">Create</option>\r\n//                                 <option value=\"UPDATE\">Update</option>\r\n//                                 <option value=\"DELETE\">Delete</option>\r\n//                                 <option value=\"FAILED_LOGIN\">Failed Login</option>\r\n//                             </select>\r\n//                         </div>\r\n//                         <div className=\"col-md-3 mb-3\">\r\n//                             <label className=\"form-label\">From Date</label>\r\n//                             <input \r\n//                                 type=\"date\" \r\n//                                 className=\"form-control\" \r\n//                                 value={filters.date_from}\r\n//                                 onChange={(e) => handleFilterChange('date_from', e.target.value)}\r\n//                             />\r\n//                         </div>\r\n//                         <div className=\"col-md-3 mb-3\">\r\n//                             <label className=\"form-label\">To Date</label>\r\n//                             <input \r\n//                                 type=\"date\" \r\n//                                 className=\"form-control\" \r\n//                                 value={filters.date_to}\r\n//                                 onChange={(e) => handleFilterChange('date_to', e.target.value)}\r\n//                             />\r\n//                         </div>\r\n//                         <div className=\"col-md-3 mb-3\">\r\n//                             <label className=\"form-label\">User ID</label>\r\n//                             <input \r\n//                                 type=\"number\" \r\n//                                 className=\"form-control\" \r\n//                                 value={filters.user_id}\r\n//                                 onChange={(e) => handleFilterChange('user_id', e.target.value)}\r\n//                                 placeholder=\"Enter user ID\"\r\n//                             />\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className=\"d-flex gap-2\">\r\n//                         <button className=\"btn btn-outline-secondary\" onClick={clearFilters}>\r\n//                             <i className=\"fas fa-times me-2\"></i>\r\n//                             Clear Filters\r\n//                         </button>\r\n//                         <button className=\"btn btn-primary\" onClick={fetchAuditLogs}>\r\n//                             <i className=\"fas fa-search me-2\"></i>\r\n//                             Apply Filters\r\n//                         </button>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n\r\n//             {/* Logs Table */}\r\n//             <div className=\"card\">\r\n//                 <div className=\"card-header\">\r\n//                     <h5 className=\"mb-0\">Audit Logs ({logs.length})</h5>\r\n//                 </div>\r\n//                 <div className=\"card-body\">\r\n//                     {loading ? (\r\n//                         <div className=\"d-flex justify-content-center\">\r\n//                             <div className=\"spinner-border text-primary\" role=\"status\">\r\n//                                 <span className=\"visually-hidden\">Loading...</span>\r\n//                             </div>\r\n//                         </div>\r\n//                     ) : logs.length === 0 ? (\r\n//                         <div className=\"text-center py-4\">\r\n//                             <i className=\"fas fa-file-alt fa-3x text-muted mb-3\"></i>\r\n//                             <p className=\"text-muted\">No audit logs found.</p>\r\n//                         </div>\r\n//                     ) : (\r\n//                         <div className=\"table-responsive\">\r\n//                             <table className=\"table table-striped\">\r\n//                                 <thead>\r\n//                                     <tr>\r\n//                                         <th>Timestamp</th>\r\n//                                         <th>User</th>\r\n//                                         <th>Action</th>\r\n//                                         <th>Success</th>\r\n//                                         <th>IP Address</th>\r\n//                                         <th>Details</th>\r\n//                                     </tr>\r\n//                                 </thead>\r\n//                                 <tbody>\r\n//                                     {logs.map(log => (\r\n//                                         <tr key={log.id}>\r\n//                                             <td>{formatDate(log.timestamp)}</td>\r\n//                                             <td>\r\n//                                                 {log.user_id ? (\r\n//                                                     <span>\r\n//                                                         <i className=\"fas fa-user me-1\"></i>\r\n//                                                         {log.user_id}\r\n//                                                     </span>\r\n//                                                 ) : (\r\n//                                                     <span className=\"text-muted\">Anonymous</span>\r\n//                                                 )}\r\n//                                             </td>\r\n//                                             <td>\r\n//                                                 <span className={`badge ${getActionBadgeClass(log.action)}`}>\r\n//                                                     {log.action}\r\n//                                                 </span>\r\n//                                             </td>\r\n//                                             <td>\r\n//                                                 {log.success ? (\r\n//                                                     <span className=\"text-success\">\r\n//                                                         <i className=\"fas fa-check-circle\"></i>\r\n//                                                     </span>\r\n//                                                 ) : (\r\n//                                                     <span className=\"text-danger\">\r\n//                                                         <i className=\"fas fa-times-circle\"></i>\r\n//                                                     </span>\r\n//                                                 )}\r\n//                                             </td>\r\n//                                             <td>\r\n//                                                 <small className=\"text-muted\">{log.ip_address}</small>\r\n//                                             </td>\r\n//                                             <td>\r\n//                                                 {log.details ? (\r\n//                                                     <small className=\"text-muted\">\r\n//                                                         {typeof log.details === 'string' ? log.details : JSON.stringify(log.details)}\r\n//                                                     </small>\r\n//                                                 ) : (\r\n//                                                     <span className=\"text-muted\">-</span>\r\n//                                                 )}\r\n//                                             </td>\r\n//                                         </tr>\r\n//                                     ))}\r\n//                                 </tbody>\r\n//                             </table>\r\n//                         </div>\r\n//                     )}\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default AuditLogs; "],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}