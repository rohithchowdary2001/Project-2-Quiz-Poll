{"ast":null,"code":"import { io } from \"socket.io-client\";\nclass SocketService {\n  constructor() {\n    this.socket = null;\n    this.isConnected = false;\n    this.user = null;\n  }\n  connect() {\n    if (this.socket && this.socket.connected) {\n      console.log('Socket already connected');\n      return this.socket;\n    }\n    console.log('üîå Connecting to socket server...');\n    this.socket = io(\"http://localhost:5000\", {\n      transports: [\"websocket\", \"polling\"],\n      withCredentials: true,\n      autoConnect: true,\n      timeout: 20000,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    this.setupEventListeners();\n    return this.socket;\n  }\n  setupEventListeners() {\n    if (!this.socket) return;\n    this.socket.on('connect', () => {\n      console.log('‚úÖ Socket connected:', this.socket.id);\n      this.isConnected = true;\n\n      // If we have user data, authenticate the socket\n      if (this.user) {\n        this.authenticate(this.user);\n      }\n    });\n    this.socket.on('disconnect', reason => {\n      console.log('‚ùå Socket disconnected:', reason);\n      this.isConnected = false;\n    });\n    this.socket.on('connect_error', error => {\n      console.error('‚ùå Socket connection error:', error);\n      this.isConnected = false;\n    });\n    this.socket.on('connected', data => {\n      console.log('üéâ Socket connection confirmed:', data);\n    });\n\n    // Quiz activation/deactivation listeners\n    this.socket.on('quizActivated', data => {\n      console.log('üîî Quiz Activated:', data);\n      this.showNotification(`üü¢ ${data.message}`, 'success');\n    });\n    this.socket.on('quizDeactivated', data => {\n      console.log('üîî Quiz Deactivated:', data);\n      this.showNotification(`üî¥ ${data.message}`, 'warning');\n    });\n    this.socket.on('classQuizActivated', data => {\n      console.log('üîî Class Quiz Activated:', data);\n      this.showNotification(`üéØ ${data.message}`, 'info');\n    });\n    this.socket.on('classQuizDeactivated', data => {\n      console.log('üîî Class Quiz Deactivated:', data);\n      this.showNotification(`‚è∏Ô∏è ${data.message}`, 'warning');\n    });\n  }\n  authenticate(user) {\n    if (!this.socket || !this.socket.connected) {\n      console.log('Socket not connected, storing user for later authentication');\n      this.user = user;\n      return;\n    }\n    console.log('üîê Authenticating socket for user:', user.username);\n    this.user = user;\n    this.socket.emit('authenticate', {\n      id: user.id,\n      username: user.username,\n      role: user.role,\n      enrolledClasses: user.enrolledClasses || [],\n      taughtClasses: user.taughtClasses || []\n    });\n  }\n  joinQuizRoom(quizId) {\n    if (this.socket && this.socket.connected) {\n      console.log(`üéØ Joining quiz room: ${quizId}`);\n      this.socket.emit('joinQuizRoom', quizId);\n    }\n  }\n  leaveQuizRoom(quizId) {\n    if (this.socket && this.socket.connected) {\n      console.log(`üö™ Leaving quiz room: ${quizId}`);\n      this.socket.emit('leaveQuizRoom', quizId);\n    }\n  }\n  showNotification(message, type = 'info') {\n    // Simple console notification - you can replace this with a toast library\n    const emoji = type === 'success' ? '‚úÖ' : type === 'warning' ? '‚ö†Ô∏è' : '‚ÑπÔ∏è';\n    console.log(`${emoji} NOTIFICATION: ${message}`);\n\n    // You can integrate with toast libraries like react-toastify here\n    if (typeof window !== 'undefined' && window.alert) {\n      // For now, just log - replace with proper notification system\n      console.log(`NOTIFICATION [${type.toUpperCase()}]: ${message}`);\n    }\n  }\n  on(event, callback) {\n    if (this.socket) {\n      this.socket.on(event, callback);\n    }\n  }\n  off(event, callback) {\n    if (this.socket) {\n      this.socket.off(event, callback);\n    }\n  }\n  emit(event, data) {\n    if (this.socket && this.socket.connected) {\n      this.socket.emit(event, data);\n    }\n  }\n  disconnect() {\n    if (this.socket) {\n      console.log('üîå Disconnecting socket...');\n      this.socket.disconnect();\n      this.isConnected = false;\n      this.user = null;\n    }\n  }\n  get connected() {\n    return this.isConnected && this.socket && this.socket.connected;\n  }\n  get id() {\n    return this.socket ? this.socket.id : null;\n  }\n}\n\n// Create singleton instance\nconst socketService = new SocketService();\n\n// Auto-connect when module loads\nsocketService.connect();\nexport default socketService;","map":{"version":3,"names":["io","SocketService","constructor","socket","isConnected","user","connect","connected","console","log","transports","withCredentials","autoConnect","timeout","reconnection","reconnectionAttempts","reconnectionDelay","setupEventListeners","on","id","authenticate","reason","error","data","showNotification","message","username","emit","role","enrolledClasses","taughtClasses","joinQuizRoom","quizId","leaveQuizRoom","type","emoji","window","alert","toUpperCase","event","callback","off","disconnect","socketService"],"sources":["C:/Users/rohit/OneDrive/Desktop/MS OCU/MS Project 2/Quiz-Poll/frontend/src/services/socket.js"],"sourcesContent":["import { io } from \"socket.io-client\";\r\n\r\nclass SocketService {\r\n  constructor() {\r\n    this.socket = null;\r\n    this.isConnected = false;\r\n    this.user = null;\r\n  }\r\n\r\n  connect() {\r\n    if (this.socket && this.socket.connected) {\r\n      console.log('Socket already connected');\r\n      return this.socket;\r\n    }\r\n\r\n    console.log('üîå Connecting to socket server...');\r\n    this.socket = io(\"http://localhost:5000\", {\r\n      transports: [\"websocket\", \"polling\"],\r\n      withCredentials: true,\r\n      autoConnect: true,\r\n      timeout: 20000,\r\n      reconnection: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n    });\r\n\r\n    this.setupEventListeners();\r\n    return this.socket;\r\n  }\r\n\r\n  setupEventListeners() {\r\n    if (!this.socket) return;\r\n\r\n    this.socket.on('connect', () => {\r\n      console.log('‚úÖ Socket connected:', this.socket.id);\r\n      this.isConnected = true;\r\n      \r\n      // If we have user data, authenticate the socket\r\n      if (this.user) {\r\n        this.authenticate(this.user);\r\n      }\r\n    });\r\n\r\n    this.socket.on('disconnect', (reason) => {\r\n      console.log('‚ùå Socket disconnected:', reason);\r\n      this.isConnected = false;\r\n    });\r\n\r\n    this.socket.on('connect_error', (error) => {\r\n      console.error('‚ùå Socket connection error:', error);\r\n      this.isConnected = false;\r\n    });\r\n\r\n    this.socket.on('connected', (data) => {\r\n      console.log('üéâ Socket connection confirmed:', data);\r\n    });\r\n\r\n    // Quiz activation/deactivation listeners\r\n    this.socket.on('quizActivated', (data) => {\r\n      console.log('üîî Quiz Activated:', data);\r\n      this.showNotification(`üü¢ ${data.message}`, 'success');\r\n    });\r\n\r\n    this.socket.on('quizDeactivated', (data) => {\r\n      console.log('üîî Quiz Deactivated:', data);\r\n      this.showNotification(`üî¥ ${data.message}`, 'warning');\r\n    });\r\n\r\n    this.socket.on('classQuizActivated', (data) => {\r\n      console.log('üîî Class Quiz Activated:', data);\r\n      this.showNotification(`üéØ ${data.message}`, 'info');\r\n    });\r\n\r\n    this.socket.on('classQuizDeactivated', (data) => {\r\n      console.log('üîî Class Quiz Deactivated:', data);\r\n      this.showNotification(`‚è∏Ô∏è ${data.message}`, 'warning');\r\n    });\r\n  }\r\n\r\n  authenticate(user) {\r\n    if (!this.socket || !this.socket.connected) {\r\n      console.log('Socket not connected, storing user for later authentication');\r\n      this.user = user;\r\n      return;\r\n    }\r\n\r\n    console.log('üîê Authenticating socket for user:', user.username);\r\n    this.user = user;\r\n    \r\n    this.socket.emit('authenticate', {\r\n      id: user.id,\r\n      username: user.username,\r\n      role: user.role,\r\n      enrolledClasses: user.enrolledClasses || [],\r\n      taughtClasses: user.taughtClasses || []\r\n    });\r\n  }\r\n\r\n  joinQuizRoom(quizId) {\r\n    if (this.socket && this.socket.connected) {\r\n      console.log(`üéØ Joining quiz room: ${quizId}`);\r\n      this.socket.emit('joinQuizRoom', quizId);\r\n    }\r\n  }\r\n\r\n  leaveQuizRoom(quizId) {\r\n    if (this.socket && this.socket.connected) {\r\n      console.log(`üö™ Leaving quiz room: ${quizId}`);\r\n      this.socket.emit('leaveQuizRoom', quizId);\r\n    }\r\n  }\r\n\r\n  showNotification(message, type = 'info') {\r\n    // Simple console notification - you can replace this with a toast library\r\n    const emoji = type === 'success' ? '‚úÖ' : type === 'warning' ? '‚ö†Ô∏è' : '‚ÑπÔ∏è';\r\n    console.log(`${emoji} NOTIFICATION: ${message}`);\r\n    \r\n    // You can integrate with toast libraries like react-toastify here\r\n    if (typeof window !== 'undefined' && window.alert) {\r\n      // For now, just log - replace with proper notification system\r\n      console.log(`NOTIFICATION [${type.toUpperCase()}]: ${message}`);\r\n    }\r\n  }\r\n\r\n  on(event, callback) {\r\n    if (this.socket) {\r\n      this.socket.on(event, callback);\r\n    }\r\n  }\r\n\r\n  off(event, callback) {\r\n    if (this.socket) {\r\n      this.socket.off(event, callback);\r\n    }\r\n  }\r\n\r\n  emit(event, data) {\r\n    if (this.socket && this.socket.connected) {\r\n      this.socket.emit(event, data);\r\n    }\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socket) {\r\n      console.log('üîå Disconnecting socket...');\r\n      this.socket.disconnect();\r\n      this.isConnected = false;\r\n      this.user = null;\r\n    }\r\n  }\r\n\r\n  get connected() {\r\n    return this.isConnected && this.socket && this.socket.connected;\r\n  }\r\n\r\n  get id() {\r\n    return this.socket ? this.socket.id : null;\r\n  }\r\n}\r\n\r\n// Create singleton instance\r\nconst socketService = new SocketService();\r\n\r\n// Auto-connect when module loads\r\nsocketService.connect();\r\n\r\nexport default socketService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}